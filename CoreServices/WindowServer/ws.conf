<?xml version="1.0"?>
<!-- Configuration for ravynOS WindowServer.app -->
<labwc_config>

  <core>
    <decoration>client</decoration>
    <gap>0</gap>
    <adaptiveSync>no</adaptiveSync>
    <cycleViewPreview>yes</cycleViewPreview>
  </core>

  <!--
    <font><theme> can be defined without an attribute to set all places
  -->
  <theme>
    <name></name>
    <cornerRadius>8</cornerRadius>
    <font place="ActiveWindow"><name>sans</name><size>10</size></font>
    <font place="MenuItem"><name>sans</name><size>10</size></font>
    <font place="OSD"><name>sans</name><size>10</size></font>
  </theme>

  <focus>
    <followMouse>no</followMouse>
    <raiseOnFocus>no</raiseOnFocus>
  </focus>

  <!--
    Set range to 0 to disable window snapping completely
  -->
  <snapping>
    <range>1</range>
    <topMaximize>yes</topMaximize>
  </snapping>

  <!--
    Keybind actions are specified in labwc-actions(5)
    The following keybind modifiers are supported:
      W - window/super/logo
      A - alt
      C - ctrl
      S - shift

    Use <keyboard><default /> to load all the default keybinds (those listed
    below). If the default keybinds are largely what you want, a sensible
    approach could be to start the <keyboard> section with a <default />
    element, and then (re-)define any special binds you need such as launching
    your favourite terminal or application launcher.
  -->
  <keyboard>
    <repeatRate>20</repeatRate>
    <repeatDelay>600</repeatDelay>
    <keybind key="C-Escape">
      <action name="Exit" />
    </keybind>
    <keybind key="W-Tab">
      <action name="NextWindow" />
    </keybind>
    <keybind key="W-Return">
      <action name="Execute"><command>foot</command></action>
    </keybind>
    <keybind key="W-w">
      <action name="Close" />
    </keybind>
    <keybind key="A-Space">
      <action name="ShowMenu"><menu>client-menu</menu></action>
    </keybind>
  </keyboard>

  <!--
    Multiple <mousebind> can exist within one <context>
    Multiple <actions> can exist within one <mousebind>
    Currently, the only openbox-action not supported is "Unshade"
  -->
  <mouse>

    <!-- time is in ms -->
    <doubleClickTime>500</doubleClickTime>
<!--
    <context name="Frame">
      <mousebind button="A-Left" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
      <mousebind button="A-Left" action="Drag">
        <action name="Move"/>
      </mousebind>
      <mousebind button="A-Right" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
      <mousebind button="A-Right" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>

    <context name="Top">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="Left">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="Right">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="Bottom">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="TRCorner">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="BRCorner">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="TLCorner">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>
    <context name="BLCorner">
      <mousebind button="Left" action="Drag">
        <action name="Resize"/>
      </mousebind>
    </context>

    <context name="TitleBar">
      <mousebind button="Left" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
      <mousebind button="Left" action="Drag">
        <action name="Move"/>
      </mousebind>
      <mousebind button="Right" action="Click">
        <action name="Focus" />
        <action name="Raise" />
        <action name="ShowMenu">
          <menu>client-menu</menu>
        </action>
      </mousebind>
      <mousebind button="Left" action="DoubleClick">
        <action name="Focus"/>
        <action name="Raise"/>
        <action name="ToggleMaximize"/>
      </mousebind>
    </context>

    <context name="Maximize">
      <mousebind button="Left" action="Click">
        <action name="Focus"/>
        <action name="Raise"/>
        <action name="ToggleMaximize"/>
      </mousebind>
    </context>

    <context name="WindowMenu">
      <mousebind button="Left" action="Click">
        <action name="ShowMenu">
          <menu>client-menu</menu>
        </action>
      </mousebind>
    </context>

    <context name="Iconify">
      <mousebind button="left" action="Click">
        <action name="Iconify"/>
      </mousebind>
    </context>

    <context name="Close">
      <mousebind button="Left" action="Click">
        <action name="Close"/>
      </mousebind>
    </context>

    <context name="Client">
      <mousebind button="Left" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
      <mousebind button="Middle" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
      <mousebind button="Right" action="Press">
        <action name="Focus"/>
        <action name="Raise"/>
      </mousebind>
    </context>

    <context name="Root">
      <mousebind button="Left" action="Press">
        <action name="ShowMenu"><menu>root-menu</menu></action>
      </mousebind>
      <mousebind button="Right" action="Press">
        <action name="ShowMenu"><menu>root-menu</menu></action>
      </mousebind>
      <mousebind button="Middle" action="Press">
        <action name="ShowMenu"><menu>root-menu</menu></action>
      </mousebind>
    </context>
-->

  </mouse>
  <!--
    The *category* element can be set to touch, non-touch, default or the name
    of a device. You can obtain device names by running *libinput list-devices*
    as root or member of the input group.

    Tap is set to *yes* be default. All others are left blank in order to use
    device defaults.

    All values are [yes|no] except for:
      - pointerSpeed [-1.0 to 1.0]
      - accelProfile [flat|adaptive]
      - tapButtonMap [lrm|lmr]
  -->
  <libinput>
    <device category="">
      <naturalScroll>yes</naturalScroll>
      <leftHanded></leftHanded>
      <pointerSpeed></pointerSpeed>
      <accelProfile></accelProfile>
      <tap>yes</tap>
      <tapButtonMap></tapButtonMap>
      <middleEmulation></middleEmulation>
      <disableWhileTyping></disableWhileTyping>
    </device>
  </libinput>

  <!-- edge strength is in pixels -->
  <resistance>
    <screenEdgeStrength>20</screenEdgeStrength>
  </resistance>

</labwc_config>

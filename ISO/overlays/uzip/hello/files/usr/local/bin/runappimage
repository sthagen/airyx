#!/bin/sh

# This is a rudimentary version of
# https://github.com/AppImage/AppImageKit/blob/master/src/runtime.c
# for use with BSD as long as it cannot natively run
# Linux AppImages as per
# https://github.com/AppImage/AppImageKit/issues/98

# May need need
# linux_base-c7 linux-c7-xorg-libs linux-c7-dri linux-c7-gtk3 linux-c7-nss linux-c7-alsa-lib linux-c7-cups-libs
# devfs on /compat/linux/dev (devfs, local, multilabel)
# linprocfs on /compat/linux/proc (linprocfs, local)
# linsysfs on /compat/linux/sys (linsysfs, local)
# /bin/bash symlink to /usr/local/bin/bash

if [ ! -L "/bin/bash" ] ; then
  echo "bin/bash is missing." >&2
  echo "Please install it using" >&2
  echo "sudo ln -s /usr/local/bin/bash /bin/bash" >&2
  exit 1
fi

# Define mountpoint for the AppImage

MOUNTPOINT=$(mktemp -d -t appimage)

# Check that we got an AppImage as the first argument

if [ -z "${1}" ] ; then
  echo "USAGE: ${0} <path to AppImage>"
  exit 1
fi

AI="${1}"

if [ ! -f "${1}" ] ; then
  echo "${1} does not exist"
  exit 1
fi

# TODO: Check magic bytes

# Determine the offset of the embedded squashfs image
# which is appended to the ELF

OFFSET=$(elfsize "${AI}")

if [ -z "${1}" ] ; then
  echo "Could not determine the offset, is this a valid AppImage?"
  exit 1
fi

# Implement --appimage-extract
# FIXME: The squashfs-tools in FreeBSD Ports is too old to support
# the -o option of unsquashfs?
# unsquashfs version 4.3 (2014/05/12)
# Needs https://www.bayofrum.net/pkg/packages/122amd64-default/All/squashfs-tools-4.4.txz

for last; do true; done
if [ "${last}" == "--appimage-extract" ] ; then
  unsquashfs -o "${OFFSET}" "${AI}"
  exit 0
fi

# Unmount whenever we exit

trap cleanup 0 1 2 3 6

cleanup()
{
  umount -f "${MOUNTPOINT}"
  sleep 0.2
  rm -r "${MOUNTPOINT}"
}

# Mount the embedded squashfs image

squashfuse -o offset="${OFFSET}" "${AI}" "${MOUNTPOINT}"
sleep 0.2 # Workaround for: ./AppRun: not found
shift # Remove one argument from $@
( cd "${MOUNTPOINT}" ; ls ; ./AppRun "$@")

# FIXME: Many AppImages expect /bin/bash to be present
# Is there a way to tell the Linuxulator that scripts should be run with
# the Linux versions?
# How to handle this best?

# FIXME: Program headers not in the first page
# https://github.com/AppImageCrafters/appimage-builder/issues/38
# https://github.com/NixOS/patchelf/issues/153
# On FreeBSD 12.1-RELEASE r354233 GENERIC
# runappimage SimpleQtApp-latest-x86_64.AppImage
# Program headers not in the first page

# FIXME: ELF binary type "0" not known
# On FreeBSD 12.1-RELEASE r354233 GENERIC
# runappimage Scribus-nightly-x86_64.AppImage
# Run experimental bundle that bundles everything
# ELF binary type "0" not known.
# exec: /tmp/appimage.4o7zhgwk/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: Exec format error

# FIXME: Trace/BPT trap for Electron based applications
# On FreeBSD 12.1-RELEASE r354233 GENERIC
# runappimage Rambox-0.7.6-linux-x86_64.AppImage
# Rambox-0.7.6-linux-x86_64.AppImage

# FIXME: Instant reboot
# On FreeBSD 13.0-RC3
# https://sourceforge.net/projects/scribus/files/scribus-devel/1.5.6.1/scribus-1.5.6.1-linux-x86_64.AppImage/download?target=_blank
# runappimage scribus-1.5.6.1-linux-x86_64.AppImage
# reboots
